
@inject IJSRuntime JS
@inject IHeroSlideService HeroSlideService
@using CenterOfExcellence.Components.HeroSection.Slider
@using CenterOfExcellence.Components.HeroSection.Carousel
@using CenterOfExcellence.Components.HeroSection.Thumbnails
@using CenterOfExcellence.Components.HeroSection.Data
@using CenterOfExcellence.Components.HeroSection.Services

<section class="hero-carousel relative w-full h-[100vh] overflow-hidden">
    <!-- Background Slides -->
    <Slider Slides="Slides" ActiveSlideId="ActiveSlideId" />
    
    <!-- Content -->
    <Carousel Slides="Slides" ActiveSlideId="ActiveSlideId" OnButtonClick="HandleClick" />
    
    <!-- Thumbnail Navigation -->
    <Thumbnails Slides="Slides" ActiveSlideId="ActiveSlideId" OnSlideChange="SetActiveSlide" />
</section>

<style>
    .hero-carousel {
        position: relative;
    }
</style>

@code {
    private List<SlideData> Slides { get; set; } = new();
    private int ActiveSlideId { get; set; } = 1;

    protected override void OnInitialized()
    {
        Slides = HeroSlideService.GetSlides();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initializeHeroCarousel");
        }
    }

    private void SetActiveSlide(int slideId)
    {
        ActiveSlideId = slideId;
        StateHasChanged();
    }

    private void HandleClick()
    {
        Console.WriteLine("Button Clicked!");
    }
}
